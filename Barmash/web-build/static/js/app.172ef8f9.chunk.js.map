{"version":3,"sources":["components/auth/Landing.js","components/auth/Register.js","components/auth/Login.js","App.js"],"names":["Landing","navigation","View","style","flex","justifyContent","Button","title","onPress","navigate","Register","props","state","email","password","name","onSignUp","bind","this","firebase","auth","createUserWithEmailAndPassword","then","result","console","log","catch","error","TextInput","placeholder","onChangeText","setState","secureTextEntry","Component","Login","signInWithEmailAndPassword","code","alert","marginTop","alignItems","textAlign","margin","borderWidth","borderColor","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Stack","createStackNavigator","App","loaded","onAuthStateChanged","user","loggedIn","Text","signOut","NavigationContainer","Navigator","initialRouteName","Screen","component","LoginScreen","options","headerShown","LandingScreen","RegisterScreen"],"mappings":"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","file":"static/js/app.172ef8f9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button, Text ,View  } from 'react-native'\r\n\r\nexport default function Landing({navigation}){\r\n    return(\r\n        <View style={ {flex:1 , justifyContent:'center'}}>\r\n            <Button \r\n                title=\"Register\" \r\n                onPress={()=>navigation.navigate(\"Register\")  } \r\n                /> \r\n            <Button \r\n                title=\"Нэвтрэх\" \r\n                onPress={()=>navigation.navigate(\"Login\")  } \r\n                /> \r\n                               \r\n        </View>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport {Button, Text ,TextInput ,View } from 'react-native'\r\nimport firebase from 'firebase'\r\n\r\nexport class Register extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n    }\r\n\r\n    onSignUp(){\r\n        const { email, password , name  } = this.state;\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then((result)=> {\r\n            console.log(result)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <View>\r\n            <TextInput \r\n            placeholder=\"name\"\r\n            onChangeText={ (name)=> this.setState({name}) }\r\n            />\r\n            <TextInput \r\n            placeholder=\"email\"\r\n            onChangeText={ (email)=> this.setState({email}) }\r\n            />\r\n            <TextInput \r\n            placeholder=\"password\"\r\n            secureTextEntry={true}\r\n            onChangeText={ (password)=> this.setState({password}) }\r\n            />\r\n            <Button \r\n                onPress={()=> this.onSignUp()} \r\n                title=\"Sign Up\"\r\n            />\r\n        </View>   \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\r\nimport {Button, Text ,TextInput ,View } from 'react-native'\r\nimport firebase from 'firebase'\r\n\r\nexport class Login extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n    }\r\n\r\n    onSignUp(){\r\n        const { email, password   } = this.state;\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then((result)=> {\r\n            console.log(result)\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n            if (error.code === 'auth/invalid-email') {\r\n                alert('Оруулсан мэдээлэл буруу байна' ,' Barmash ')\r\n            }\r\n        })\r\n\r\n   }\r\n\r\n    render(){\r\n        return (\r\n        <View     style={{  marginTop : '10%' , justifyContent : 'center'  ,alignItems: 'center'  }}>\r\n            <TextInput \r\n            placeholder=\"имейл\"\r\n            style={{ textAlign: 'center' , margin :4, borderWidth : 2 , borderColor : 'grey' }}\r\n            onChangeText={ (email)=> this.setState({email}) }\r\n            />\r\n            <TextInput \r\n            placeholder=\"нууц үг\"\r\n            style={{  textAlign: 'center' , margin: 4 ,borderWidth : 2 , borderColor : 'grey' }}\r\n            secureTextEntry={true}\r\n            onChangeText={ (password)=> this.setState({password}) }\r\n            />\r\n            <Button  \r\n            style={{  textAlign: 'center' }}\r\n            onPress={()=> this.onSignUp()} \r\n                title=\"Нэвтрэх\"\r\n            />\r\n        </View>   \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login","import { StatusBar } from 'expo-status-bar';\nimport React, {Component} from 'react';\nimport firebase from 'firebase';\n\nimport { Button, StyleSheet, Text,View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack'\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAe_Dm5976OSzEWMu87QvSQAgLPhBftqPc\",\n  authDomain: \"barmash-2db77.firebaseapp.com\",\n  projectId: \"barmash-2db77\",\n  storageBucket: \"barmash-2db77.appspot.com\",\n  messagingSenderId: \"499140947381\",\n  appId: \"1:499140947381:web:89ead1d0382b4fef75fdfc\",\n  measurementId: \"G-WTQD4X1VWJ\"\n};\n\nif(firebase.apps.length === 0){\n  firebase.initializeApp(firebaseConfig)\n}\n\nimport LandingScreen from './components/auth/Landing';\nimport RegisterScreen from './components/auth/Register';\nimport LoginScreen from './components/auth/Login';\n\nconst Stack = createStackNavigator();\n\nexport class App extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      loaded: false,\n    }\n  }\n  componentDidMount(){  \n\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if(!user){\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      }\n      else{\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  render() {\n    const {loggedIn , loaded } = this.state;\n    if(!loaded){\n      return(\n          <View style={ {flex:1 , justifyContent:'center'}}>\n              <Text style={ {textAlign:'center'}}  >Loading</Text>\n          </View>\n      )\n    }\n    if(!loggedIn){\n      return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName=\"LoginScreen\">\n            <Stack.Screen name=\"Login\" component={LoginScreen} options={{headerShown: false}} />\n            <Stack.Screen name=\"Landing\" component={LandingScreen}  />\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\n              \n              </Stack.Navigator>\n        </NavigationContainer>\n      );\n    }\n\n    return(\n      <View style={ {flex:1 , justifyContent:'center'}}>\n      <Text  style={ {textAlign:'center', borderWidth: 1 } }> Төсөв үүсгэх, засах </Text> \n      <Text  style={ {textAlign:'center'} }>  </Text> \n      \n      <Text  style={ {textAlign:'center', borderWidth: 1} }> Өгөгдлийн сангууд </Text>\n      <Text  style={ {textAlign:'center'} }>  </Text> \n      <Text  style={ {textAlign:'center', borderWidth: 1} }> Программын тохиргоо </Text>\n      <Text  style={ {textAlign:'center'} }>  </Text> \n      <Button \n        style={ {textAlign:'center', borderWidth: 1} } \n        onPress={()=> { firebase.auth().signOut() }} title=\"Программас гарах\" >\n      </Button>\n        \n      \n      \n     </View>\n    )\n\n  }\n}\n\n\n\nexport default App\n"],"sourceRoot":""}